<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/02/22/hello-world/"/>
      <url>/2020/02/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Helper Function for Clean code (Python)</title>
      <link href="/2020/02/04/python-skills/"/>
      <url>/2020/02/04/python-skills/</url>
      
        <content type="html"><![CDATA[<center><span style="color: orange; font-size: 35px">Python 코드의 가독성을 높여보자</span></center><br><h1 id="상황-1-URL에서-쿼리-문자열을-디코드해야-할-때"><a href="#상황-1-URL에서-쿼리-문자열을-디코드해야-할-때" class="headerlink" title="#상황 1. URL에서 쿼리 문자열을 디코드해야 할 때"></a>#상황 1. URL에서 쿼리 문자열을 디코드해야 할 때</h1><br><blockquote><p>URL에서 인코딩, 디코딩의 의미는 보안에서의 의미와 살짝 다르다. <br><br>인코딩 <br><br><a href="http://www.google.com/떡볶이" target="_blank" rel="noopener">http://www.google.com/떡볶이</a> 먹고싶다!! <br><br>=&gt; <a href="http://www.google.com/search?sxsrf=ACYBGNTgapWszfC06soR1IlVyLsC2w_7EQ%" target="_blank" rel="noopener">http://www.google.com/search?sxsrf=ACYBGNTgapWszfC06soR1IlVyLsC2w_7EQ%</a> <br><br>3A1580777854450&amp;source=hp&amp;ei=fsE4Xri1GdWRr7wPvM2UOA&amp;q=떡볶이+먹고싶다!! <br><br>주소에 한글/공백/특수기호가 들어가면 안되기 때문에 가능하도록 변환하는 작업 <br><br>디코딩은 그 반대 </p></blockquote><h2 id="Boolean-표현식"><a href="#Boolean-표현식" class="headerlink" title="Boolean 표현식"></a>Boolean 표현식</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> parse_qs</span><br><span class="line"></span><br><span class="line">my_values = parse_qs(<span class="string">'red=5&amp;blue=0&amp;green='</span>,keep_blank_values=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 값 전체 (dictionary로 저장)</span></span><br><span class="line">print(my_values)</span><br><span class="line">: &#123;<span class="string">'red'</span>: [<span class="string">'5'</span>], <span class="string">'green'</span>:[<span class="string">''</span>],<span class="string">'blue'</span>:[<span class="string">'0'</span>]&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 각각의 값을 뽑을 때</span></span><br><span class="line">red = my_values.get(<span class="string">'red'</span>,[<span class="string">''</span>])[<span class="number">0</span>] <span class="keyword">or</span> <span class="number">0</span></span><br><span class="line">green = my_values.get(<span class="string">'green'</span>,[<span class="string">''</span>])[<span class="number">0</span>] <span class="keyword">or</span> <span class="number">0</span></span><br><span class="line">opacity = my_values.get(<span class="string">'opacity'</span>,[<span class="string">''</span>])[<span class="number">0</span>] <span class="keyword">or</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p><strong>평가 =&gt;</strong> 이 표현식은 읽기도 불편하고 필요한 작업을 수행하지도 못하는 좋지 못한 코딩<br>{: .notice}</p><br><h3 id="Boolean-표현식-변형"><a href="#Boolean-표현식-변형" class="headerlink" title="Boolean 표현식 변형"></a>Boolean 표현식 변형</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">red = my_values.get(<span class="string">'red'</span>,[<span class="string">''</span>])[<span class="number">0</span>] <span class="keyword">or</span> <span class="number">0</span></span><br><span class="line">green = my_values.get(<span class="string">'green'</span>,[<span class="string">''</span>])[<span class="number">0</span>] <span class="keyword">or</span> <span class="number">0</span></span><br><span class="line">opacity = my_values.get(<span class="string">'opacity'</span>,[<span class="string">''</span>])[<span class="number">0</span>] <span class="keyword">or</span> <span class="number">0</span></span><br><span class="line">                    ∥</span><br><span class="line">                    ∨</span><br><span class="line">red = int(my_values.get(<span class="string">'red'</span>,[<span class="string">''</span>])[<span class="number">0</span>] <span class="keyword">or</span> <span class="number">0</span>)</span><br><span class="line">green = int(my_values.get(<span class="string">'green'</span>,[<span class="string">''</span>])[<span class="number">0</span>] <span class="keyword">or</span> <span class="number">0</span>)</span><br><span class="line">opacity = int(my_values.get(<span class="string">'opacity'</span>,[<span class="string">''</span>])[<span class="number">0</span>] <span class="keyword">or</span> <span class="number">0</span>)</span><br></pre></td></tr></table></figure><br><h2 id="if-else-조건식-삼항-표현식"><a href="#if-else-조건식-삼항-표현식" class="headerlink" title="if/else 조건식(삼항 표현식)"></a>if/else 조건식(삼항 표현식)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> parse_qs</span><br><span class="line"></span><br><span class="line">my_values = parse_qs(<span class="string">'red=5&amp;blue=0&amp;green='</span>,keep_blank_values=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">red = my_values.get(<span class="string">'red'</span>,[<span class="string">''</span>])</span><br><span class="line">red = int(red[<span class="number">0</span>]) <span class="keyword">if</span> red[<span class="number">0</span>] <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">green = my_values.get(<span class="string">'green'</span>,[<span class="string">''</span>])</span><br><span class="line">green = int(green[<span class="number">0</span>]) <span class="keyword">if</span> green[<span class="number">0</span>] <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">opacity = my_values.get(<span class="string">'opacity'</span>,[<span class="string">''</span>])</span><br><span class="line">opacity = int(opacity[<span class="number">0</span>]) <span class="keyword">if</span> opacity[<span class="number">0</span>] <span class="keyword">else</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><br><p><strong>평가 =&gt;</strong> 삼항 표현식은 코드를 짧게 유지하면서도 명확하게 표현 할 수 있는 장점이 있지만 복잡한 로직일 경우 남발하면 안된다.<br>{: .notice}</p><br><h2 id="여러줄에-걸친-if-else-문"><a href="#여러줄에-걸친-if-else-문" class="headerlink" title="여러줄에 걸친 if/else 문"></a>여러줄에 걸친 if/else 문</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">green = my_values.get(<span class="string">'green'</span>,[<span class="string">''</span>])</span><br><span class="line"><span class="keyword">if</span> green[<span class="number">0</span>]:</span><br><span class="line">    green = int(green[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    green = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">red = my_values.get(<span class="string">'red'</span>,[<span class="string">''</span>])</span><br><span class="line"><span class="keyword">if</span> red[<span class="number">0</span>]:</span><br><span class="line">    red = int(red[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    red = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">opacity = my_values.get(<span class="string">'opacity'</span>,[<span class="string">''</span>])</span><br><span class="line"><span class="keyword">if</span> opacity[<span class="number">0</span>]:</span><br><span class="line">    opacity = int(opacity[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    opacity = <span class="number">0</span></span><br></pre></td></tr></table></figure><br><p><strong>평가 =&gt;</strong> 직관적이고 이해하기 편하나 코드의 길이가 길어 속도가 느려질 수 있다. 그리고 오히려 복잡한 수학 문제 같은 경우 코드가 길면 이해하기 더 힘들 수 있다.<br>{: .notice}</p><br><h2 id="Helper-Function"><a href="#Helper-Function" class="headerlink" title="Helper Function"></a>Helper Function</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">get_first_int</span><span class="params">(values, key, default=<span class="number">0</span>)</span>:</span></span><br><span class="line">     found = values.get(key, [<span class="string">''</span>])</span><br><span class="line">     <span class="keyword">if</span> found[<span class="number">0</span>]:</span><br><span class="line">         found = int(found[<span class="number">0</span>])</span><br><span class="line">     <span class="keyword">else</span>:</span><br><span class="line">         found = default</span><br><span class="line">     <span class="keyword">return</span> found</span><br><span class="line"></span><br><span class="line">green = get_first_int(my_values, <span class="string">'green'</span>)</span><br><span class="line">red = get_first_int(my_values, <span class="string">'red'</span>)</span><br><span class="line">opacity = get_first_int(my_values, <span class="string">'opacity'</span>)</span><br></pre></td></tr></table></figure><p><strong>평가 =&gt;</strong> 복잡한 표현식보다 호출 코드가 훨씬 명확해진다. 하지만 아주 간단한 문제인데도 불구하고 너무 헬퍼 함수를 쓰는 것도 그리 좋지 않다.<br>{: .notice}</p><center><span style="color: #ca6257; font-size: 20px">최종 평가</span></center><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">상황에 잘 맞게 적절하게 코드를 짜야 한다!</span><br><span class="line">그리고</span><br><span class="line">표현식이 복잡해지기 시작하면 최대한 빨리 해당 표현식을 작은 조각으로 분할하고</span><br><span class="line">로직을 헬퍼 함수로 옮기는 방안을 고려해야 한다.</span><br><span class="line"></span><br><span class="line">무조건 짧은 코드를 만들기보다는 가독성을 선택하는 편이 나을때가 많다.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> clean code </tag>
            
            <tag> helper function </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
